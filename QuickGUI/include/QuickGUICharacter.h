#ifndef QUICKGUICHARACTER_H
#define QUICKGUICHARACTER_H

#include "QuickGUIExportDLL.h"
#include "QuickGUIRect.h"
#include "QuickGUIUVRect.h"
#include "QuickGUIOgreEquivalents.h"

#include "OgreColourValue.h"
#include "Overlay/OgreFont.h"
#include "OgreUTFString.h"

namespace QuickGUI
{
	class _QuickGUIExport Character
	{
	public:
		Character(Ogre::UTFString::code_point cp, Ogre::FontPtr fp, ColourValue cv);		

		/**
		* Returns true if this character is highlighted, false otherwise.
		*/
		bool getHighlighted();
		/**
		* Returns the color of the text background when highlighted.
		*/
		ColourValue getHighlightColor();
		/**
		* Returns the color of the text when highlighted.
		*/
		ColourValue getHighlightedTextColor();

		/**
		* Returns true if this character is a tab, newline, carriage return, space, or other whitespace.
		*/
		bool isWhiteSpace();

		/**
		* Updates fontPtr member variable and recalculates uv coords and dimensions.
		*/
		void setFont(Ogre::FontPtr fp);
		/**
		* Sets whether this character is highlighted or not.
		*/
		void setHighlighted(bool highlighted);

		/// Code point of the glyph
		Ogre::UTFString::code_point codePoint;
		/// Color of the character when drawn.
		ColourValue colorValue;
		/// Position is relative to the parent TextLine
		Rect dimensions;
		/// Font of the glyph being drawn.
		Ogre::FontPtr fontPtr;
		/// member allowing fast access to font texture name
		Ogre::TexturePtr texturePtr;
		/// UV coords of glyph, retreived from Font texture generated by Ogre::Font class.
		UVRect uvCoords;

	protected:
		Character();

		bool mHighlighted;
		bool mWhiteSpace;
	};
}

#endif
